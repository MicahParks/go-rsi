package main

import (
	"log"
	"os"

	"github.com/MicahParks/go-rsi"
)

func main() {
	// Create a logger.
	logger := log.New(os.Stdout, "", 0)

	// Create the RSI data structure and get the first result.
	//
	// The slice argument should be the number of periods
	const initialLength = rsi.DefaultPeriods + 1
	r, result := rsi.New(prices[0:initialLength])
	logger.Printf("Period index: %d\nRSI result: %.8f", rsi.DefaultPeriods, result)

	// Use the remaining data to generate the RSI for each period.
	for i, next := range prices[initialLength:] {
		result = r.Calculate(next)
		logger.Printf("Period index: %d\nRSI result: %.8f", i+initialLength, result)
	}
}

var (
	prices = []float64{
		88.55,
		88.96,
		87.93,
		88.48,
		88.14,
		89.1,
		89.61,
		89.58,
		89.53,
		89.47,
		90.2,
		90.8,
		90.92,
		90.7,
		91.35,
		91.73,
		91.11,
		91.76,
		90.67,
		89.97,
		90.04,
		89.15,
		89.74,
		89.79,
		88.25,
		88.61,
		88.28,
		88.46,
		88.67,
		88.52,
		88.36,
		89.32,
		88.97,
		88.59,
		89.2,
		87.7,
		88.51,
		89.53,
		89.55,
		89.43,
		88.95,
		89.61,
		89.56,
		88.71,
		88.97,
		89.16,
		89.16,
		89.26,
		89.83,
		89.37,
		88.77,
		88.58,
		88.63,
		88.17,
		89.29,
		89.02,
		90.13,
		90.58,
		90.11,
		90.77,
		90.58,
		89.93,
		89.77,
		89.01,
		88.6,
		88.77,
		88.68,
		89.22,
		88.99,
		86.49,
		86.61,
		86.08,
		86.62,
		87.45,
		88.09,
		89.3,
		89.43,
		88.07,
		88,
		88.21,
		88.99,
		87.51,
		88.63,
		90.02,
		90.58,
		91.15,
		91.7,
		91.03,
		90.14,
		90.1,
		91.11,
		91.24,
		90.7,
		91.76,
		92.52,
		92.8,
		92.19,
		91.79,
		91.53,
		92.38,
		92.08,
		92.09,
		90.47,
		91.46,
		90.79,
		89.65,
		90.23,
		91.45,
		91.12,
		90.46,
		89.74,
		91.33,
		90.58,
		91.51,
		91.93,
		91,
		89.05,
		89.48,
		88.48,
		89.11,
		89.8,
		90.04,
		90.35,
		90.3,
		90.64,
		90.69,
		91.57,
		92.25,
		93.34,
		92.82,
		93.27,
		93.4,
		93.25,
		93.3,
		93.46,
		94.38,
		95.17,
		94.83,
		95.2,
		94.99,
		94.97,
		94.79,
		94.03,
		93.81,
		93.75,
		92.73,
		91.95,
		91.59,
		91.47,
		91.34,
		91.78,
		90.72,
		89.89,
		89.4,
		88.95,
		88.16,
		87.91,
		86.92,
		86.83,
		86.42,
		86.98,
		87.52,
		87.09,
		86.82,
		88.84,
		87.27,
		87.16,
	}
)
